package Interfaz;

import Usuario.Usuario;
import java.awt.BorderLayout;
import java.awt.Color;
import javax.swing.JPanel;
import java.util.ArrayList;
import Servicio.Servicio;
import javax.swing.JButton;
/**
 * Clase que extiende de Jpanel lo cual servira para mostrar
 * la interfaz de Pagos.
 * 
 * @author Axel-Nuñez.
 */
public class InterfazPagos extends javax.swing.JPanel{
    /**
     * Creates new form Pagos
     */
    private Servicio [] Principales;
    private Usuario user;
    public InterfazPagos(Usuario user) {
        this.user = user;
        Principales = new Servicio[4];
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(495, 280));

        jPanel1.setBackground(new java.awt.Color(103, 36, 0));
        jPanel1.setForeground(new java.awt.Color(255, 51, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 470));
        jPanel1.setLayout(null);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Serif", 0, 28)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Pagos");

        jSeparator1.setForeground(Color.black);
        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("¿Qué desea pagar?");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jButton1.setText("Tarjetas");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Servicios");

        jTextField1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(204, 204, 204));
        jTextField1.setText("Seleccione un servicio");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(56, 29, 42));

        jButton4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel1)
                        .addGap(208, 208, 208)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(199, 199, 199))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    
    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        String coincidencias = jTextField1.getText();
        ArrayList<Servicio> Prin = user.base.getServicios();
        
        if(coincidencias != "")
            showOptions(coincidencias,Prin);
    }//GEN-LAST:event_jTextField1KeyReleased
    
    /**
     * Se escarga de establecer los servicios que serán mostrados al usuario.
     * @param Coincidencias String: Texto ingresado por el usuario.
     * @param Prin Lista de servicios disponibles en la base de datos.
     */
    public void showOptions(String Coincidencias, ArrayList<Servicio> Prin){
        int contador = 0;
        int []coin = new int[100];
        for(int i = 0; i < 100; i++){
            coin[i] = 0;
        }
        Servicio [] coinci = new Servicio[100];
        int indice = 0;
        Servicio principal = new Servicio("","");
        
        /* Consultamos la cantidad de coincidencias que tienen cada uno
               nuestros servicios con el que ingreso el usuario. */
        for(Servicio servi : Prin){
            String Servid = servi.getNombre();
            for(int j = 0; j < Coincidencias.length(); j++){
                if(Servid.charAt(j) == Coincidencias.charAt(j)){
                    contador++;
                    continue;
                }
                /*En caso de Dismatch rompemos la busqueda.-*/
                break;
            }
            /*si hubo alguna coincidencias.. agregamos en el array de servicios*/
            if(contador >= 1){
                coinci[indice] = new Servicio("","");
                coinci[indice]= servi;
                coin[indice] = contador;
                indice++;
            }
            
            contador = 0;
        }
        /* Ordenamos los servicios a la vista del Usuario. */
        if(indice > 1)
            ordenarServicio(coin,coinci,indice);
        
        /* Asignamos los botones de seleccion para el Usuario. */
        jButton8 = asignarBoton(coin[0],coinci[0],jButton8);
        jButton7 = asignarBoton(coin[1],coinci[1],jButton7);
        jButton4 = asignarBoton(coin[2],coinci[2],jButton4);
        int k;
        for(k = 0; k < 3; k++){
            Principales[k] = coinci[k];
        }
    }
    
     /**
     * Resetea el texto predeterminado una vez el usuario hizo click
     * en el cuadro de texto.
     * @param evt FocusEvent: brinda informacion de cuando el usuario
     * hace click en el cuadro de texto.
     */
    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        jTextField1.setText(""); 
    }//GEN-LAST:event_jTextField1FocusGained

     /**
     * Resetea el cuadro de texto al texto predeterminado, en caso 
     * de que el usuario no ingrese ningun texto.
     * @param evt 
     */
    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        jTextField1.setText("Seleccione un servicio");
        
    }//GEN-LAST:event_jTextField1FocusLost

     /**
     * Configuracion de la accion del Boton asi como instanciacion del siguiente panel
     * (confirmacionDePago).
     * @param evt ActionEvent: brinda informacion sobre la accion del boton.
     */
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Interfaz_ConfirmacionDePago inter = new Interfaz_ConfirmacionDePago(user,Principales[0]);
        showPanel(inter);
    }//GEN-LAST:event_jButton8ActionPerformed

     /**
     * Configuracion de la accion del Boton asi como instanciacion del siguiente panel
     * (confirmacionDePago).
     * @param evt ActionEvent: brinda informacion sobre la accion del boton.
     */
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        Interfaz_ConfirmacionDePago inter = new Interfaz_ConfirmacionDePago(user,Principales[1]);
        showPanel(inter);
    }//GEN-LAST:event_jButton7ActionPerformed

     /**
     * Configuracion de la accion del Boton asi como instanciacion del siguiente panel
     * (confirmacionDePago).
     * @param evt ActionEvent: brinda informacion sobre la accion del boton.
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Interfaz_ConfirmacionDePago inter = new Interfaz_ConfirmacionDePago(user,Principales[2]);
        showPanel(inter);
    }//GEN-LAST:event_jButton4ActionPerformed
    
     /**
     * Ordena la lista de servicio que será mostrada al Usuario.
     * @param coin Array(int): Lista de coincidencias de los servicios.
     * @param Principales Array(Servicio): Lista de Servicios a ser mostrada al usuario.
     * @param cant int: Cantidad de elemento con coincidencias mayor que 1.-
     * @return retorna Servicio[]
     */
    public Servicio[] ordenarServicio(int coin[], Servicio Principales[], int cant){
        if(cant <= 2){
            if(coin[0] < coin[1]){
                int tem = coin[0];
                    Servicio temp = Principales[0];
                    coin[0] = coin[1];
                    coin[1] = tem;
                    Principales[0] = Principales[1];
                    Principales[1] = temp;
            }
        }if(cant > 2){
            for(int i = 0; i < cant; i++){
                for(int j = 0; j < cant-1; j++){
                    if(coin[j] < coin[j+1]){
                        /* Creamos e inicializamos la variables temporales
                           para hacer el intercambio. */
                        int tem = coin[j];
                        Servicio temp = Principales[j];
                        coin[j] = coin[j+1];
                        coin[j+1] = tem;
                        Principales[j] = Principales[j+1];
                        Principales[j+1] = temp;
                    }
                }
            }
        }
        return Principales;
    }
    
    
    /**
     * Reemplaza JpanelActual(dinamico) por el que siguiente a ser mostrado.
     * @param jp Panel a ser agregado en el contenido dinamico.
     */
    private void showPanel(JPanel jp){
        jp.setSize(585,600);
        jp.setLocation(0,0);
        jPanel1.removeAll();
        jPanel1.add(jp,BorderLayout.CENTER);
        jPanel1.revalidate();
        jPanel1.repaint();
    }
    /**
     * Asignacion del nombre del Servicio al boton y asignacion correspondiente
     * para confirmacion de pago.-
     * @param coin int: Cantidad de Coincidencias segun lo ingresado por el usuario.
     * @param principal Servicio: Servicio a ser escrito dentro del boton.
     * @param jp JButton: Boton que redirigirá a confirmacion de pago.
     * @return JButton: Boton Modificado, listo para ser Oprimido.
     */
    public JButton asignarBoton(int coin, Servicio principal, JButton jp){  
        if(coin > 0)
            /* Asignamos el nombre del Servicio al Boton. */
            jp.setText(principal.getNombre());
        else
            jp.setText("");       
        return jp;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
